buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:$nexusPluginVersion"
  }
}

apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'signing'

ext {
  isReleaseVersion = !libVersion.endsWith("SNAPSHOT")
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

sourceCompatibility = 1.6
targetCompatibility = 1.6
group = 'com.github.czyzby'
version = libVersion
archivesBaseName = 'kotlin-times'

configurations {
  deployerJars
}

jar {
  from project.sourceSets.main.allSource
  from project.sourceSets.main.output
  baseName = archivesBaseName
}

dependencies {
  testCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
  testCompile "junit:junit:$junitVersion"
  deployerJars "org.apache.maven.wagon:wagon-ssh:$wagonVersion"
  deployerJars "org.apache.maven.wagon:wagon-http:$wagonVersion"
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives jar, javadocJar, sourcesJar
}

signing {
  required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name = 'kotlin-times'
        packaging 'jar'
        description = 'Extension functions for simple and readable loops.'
        url 'http://github.com/czyzby/kotlin-times'

        licenses {
          license {
            name 'The Unlicense'
            url 'http://unlicense.org/'
          }
        }
        
        scm {
          connection 'scm:git:git@github.com:czyzby/kotlin-times.git'
          developerConnection 'scm:git:git@github.com:czyzby/kotlin-times.git'
          url 'http://github.com/czyzby/kotlin-times/'
        }

        developers {
          developer {
            id 'mj'
            name 'MJ'
            email 'john.hervicc@gmail.com'
          }
        }
      }
    }
  }
}

nexusStaging {
  packageGroup = 'com.github.czyzby'
  username = ossrhUsername
  password = ossrhPassword
}

